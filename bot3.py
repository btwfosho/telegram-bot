import pandas as pd
import re
import asyncio
from datetime import datetime, timedelta
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes
import os
from dotenv import load_dotenv
import logging
from logging.handlers import RotatingFileHandler
from telegram.error import NetworkError, RetryAfter, TimedOut
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
handler = RotatingFileHandler("bot.log", maxBytes=5000000, backupCount=3)  # 5 MB –Ω–∞ –ª–æ–≥-—Ñ–∞–π–ª, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è 3 –∫–æ–ø–∏–∏
logging.basicConfig(level=logging.INFO, handlers=[handler],
                    format='%(asctime)s - %(levelname)s - %(message)s')

# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def notify_admin(context: ContextTypes.DEFAULT_TYPE, message: str) -> None:
    admin_id = 8025906752  # –£–∫–∞–∂–∏—Ç–µ Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    try:
        await context.bot.send_message(chat_id=admin_id, text=message)
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
BOT_TOKEN = os.getenv('BOT_TOKEN')

if not BOT_TOKEN:
    logging.critical("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env.")
    exit(1)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel
try:
    data = pd.read_excel("result_with_ids.xlsx")
    logging.info("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ result_with_ids.xlsx")
except FileNotFoundError:
    logging.error("–§–∞–π–ª result_with_ids.xlsx –Ω–µ –Ω–∞–π–¥–µ–Ω. –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø—É—Å—Ç–æ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.")
    data = pd.DataFrame()

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
user_languages = {}
user_last_activity = {}
user_requests = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –í–£ –Ω–æ–º–µ—Ä—É
def find_data_by_vu(vu_number):
    try:
        user_data = data[data["–í–£ –Ω–æ–º–µ—Ä"] == vu_number]
        if not user_data.empty:
            result = user_data.to_dict(orient="records")[0]
            return {
                "–ò–º—è": result['–ò–º—è'],
                "–ì–æ—Ä–æ–¥": result['–ì–æ—Ä–æ–¥'],
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤": result['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤'],
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–æ–Ω–æ–≤": result['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–æ–Ω–æ–≤'],
                "–ù–æ–º–µ—Ä–∞ –∫—É–ø–æ–Ω–æ–≤": result['–ù–æ–º–µ—Ä –∫—É–ø–æ–Ω–∞'],
            }
        else:
            logging.warning(f"–î–∞–Ω–Ω—ã–µ –¥–ª—è –í–£ –Ω–æ–º–µ—Ä–∞ {vu_number} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return None
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –í–£: {e}")
        return None

# –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def is_request_allowed(user_id):
    current_time = datetime.now()
    if user_id not in user_requests:
        user_requests[user_id] = current_time
        return True
    elif (current_time - user_requests[user_id]).seconds > 60:  # –õ–∏–º–∏—Ç: 1 –∑–∞–ø—Ä–æ—Å –≤ –º–∏–Ω—É—Ç—É
        user_requests[user_id] = current_time
        return True
    return False

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –í–£ —Å —É—á—ë—Ç–æ–º —è–∑—ã–∫–∞
def generate_message(user_data, language):
    try:
        if language == "ru":
            return (f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º—ã–π {user_data['–ò–º—è']}!ü§ù\n\n"
                    f"üïã –ú—ã –ø—Ä–æ–≤–æ–¥–∏–º —Ä–æ–∑—ã–≥—Ä—ã—à –ø—É—Ç—ë–≤–∫–∏ –≤ –£–ú–†–£!\n"
                    f"üèÜ –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–∫–∞–∑—ã.\n"
                    f"üéü –ó–∞ –∫–∞–∂–¥—ã–µ 100 –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ = 1 –∫—É–ø–æ–Ω.\n\n"
                    f"üìÖ –ó–∞–∫–∞–∑—ã –Ω—É–∂–Ω–æ –±—ã–ª–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤ —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–∏–æ–¥—ã:\n"
                    f"21.02.2025 - 28.02.2025\n"
                    f"01.03.2025 - 07.03.2025\n\n"
                    f"–£ –≤–∞—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–æ {user_data['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤']} –∑–∞–∫–∞–∑–æ–≤, –ø–æ—ç—Ç–æ–º—É —É –≤–∞—Å –µ—Å—Ç—å {user_data['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–æ–Ω–æ–≤']} –∫—É–ø–æ–Ω–æ–≤.\n"
                    f"–ù–æ–º–µ—Ä–∞ –≤–∞—à–∏—Ö –∫—É–ø–æ–Ω–æ–≤: {user_data['–ù–æ–º–µ—Ä–∞ –∫—É–ø–æ–Ω–æ–≤']}.\n\n"                
                    f"–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:\n"
                    f"üìû +7 777 777 65 00\n\n"
                    f"–° —É–≤–∞–∂–µ–Ω–∏–µ–º, —Ç–∞–∫—Å–æ–ø–∞—Ä–∫ \"–ê–≤—Ç–æ–ø–∞—Ä—Ç–Ω—ë—Ä\"!")
        elif language == "kz":
            return (f"–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ, “ö“±—Ä–º–µ—Ç—Ç—ñ {user_data['–ò–º—è']}!ü§ù\n\n"
                    f"üïã –ë—ñ–∑ –£–ú–†–ê“í–ê –∂–æ–ª–¥–∞–º–∞ “±—Ç—ã—Å –æ–π—ã–Ω—ã–Ω ”©—Ç–∫—ñ–∑–µ–º—ñ–∑!\n"
                    f"üèÜ “∞—Ç—ã—Å“õ–∞ “õ–∞—Ç—ã—Å—É “Ø—à—ñ–Ω —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç–∞—Ä –æ—Ä—ã–Ω–¥–∞—É “õ–∞–∂–µ—Ç.\n"
                    f"üéü ”ò—Ä–±—ñ—Ä 100 –æ—Ä—ã–Ω–¥–∞–ª“ì–∞–Ω —Ç–∞–ø—Å—ã—Ä—ã—Å“õ–∞ = 1 –∫—É–ø–æ–Ω.\n\n"
                    f"üìÖ –ú—ã–Ω–∞ –∫–µ–∑–µ“£–¥–µ—Ä–¥–µ —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç–∞—Ä–¥—ã –æ—Ä—ã–Ω–¥–∞—É “õ–∞–∂–µ—Ç –±–æ–ª–¥—ã:\n"
                    f"21.02.2025 - 28.02.2025\n"
                    f"01.03.2025 - 07.03.2025\n\n"
                    f"–°—ñ–∑–¥–µ {user_data['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤']} —Ç–∞–ø—Å—ã—Ä—ã—Å –æ—Ä—ã–Ω–¥–∞–ª“ì–∞–Ω–¥—ã“õ—Ç–∞–Ω, —Å—ñ–∑–¥–µ {user_data['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–æ–Ω–æ–≤']} –∫—É–ø–æ–Ω –±–∞—Ä.\n"
                    f"–°—ñ–∑–¥—ñ“£ –∫—É–ø–æ–Ω —Å–∞–Ω–¥–∞—Ä—ã“£—ã–∑: {user_data['–ù–æ–º–µ—Ä–∞ –∫—É–ø–æ–Ω–æ–≤']}.\n\n"                    
                    f"–ï–≥–µ—Ä —Å“±—Ä–∞“õ—Ç–∞—Ä—ã“£—ã–∑ –±–æ–ª—Å–∞ –Ω–µ–º–µ—Å–µ –∫”©–º–µ–∫ “õ–∞–∂–µ—Ç –±–æ–ª—Å–∞, –±—ñ–∑–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å—ã“£—ã–∑:\n"
                    f"üìû +7 777 777 65 00\n\n"
                    f"“ö“±—Ä–º–µ—Ç–ø–µ–Ω, \"–ê–≤—Ç–æ–ø–∞—Ä—Ç–Ω–µ—Ä\" —Ç–∞–∫—Å–æ–ø–∞—Ä–∫—ñ!")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–æ–≥–¥–∞ –í–£ –Ω–æ–º–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω)
def generate_not_found_message(language):
    if language == "ru":
        return ("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º—ã–π –≤–æ–¥–∏—Ç–µ–ª—å!ü§ù\n\n"
                "–í–∞—à–µ–≥–æ –í–£ –Ω–æ–º–µ—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤—ã –µ—â—ë –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ 100 –∑–∞–∫–∞–∑–æ–≤.\n\n"
                "üïã –ú—ã –ø—Ä–æ–≤–æ–¥–∏–º —Ä–æ–∑—ã–≥—Ä—ã—à –ø—É—Ç—ë–≤–∫–∏ –≤ –£–ú–†–£!\n"
                "üèÜ –ó–∞ –∫–∞–∂–¥—ã–µ 100 –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ = 1 –∫—É–ø–æ–Ω.\n\n"
                "üìÖ –ó–∞–∫–∞–∑—ã –Ω—É–∂–Ω–æ –±—ã–ª–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤ —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–∏–æ–¥—ã:\n"
                "21.02.2025 - 28.02.2025\n"
                "01.03.2025 - 07.03.2025\n\n"
                "–ï—â—ë –µ—Å—Ç—å –≤—Ä–µ–º—è! –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–∫–∞–∑—ã, –∏ –º—ã –¥–æ–±–∞–≤–∏–º –≤–∞—Å –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤! üí™\n\n"
                "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:\n"
                "üìû +7 777 777 65 00 (WhatsApp)\n\n"
                "–° —É–≤–∞–∂–µ–Ω–∏–µ–º, —Ç–∞–∫—Å–æ–ø–∞—Ä–∫ \"–ê–≤—Ç–æ–ø–∞—Ä—Ç–Ω—ë—Ä\"!")
    elif language == "kz":
        return ("–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ, “ö“±—Ä–º–µ—Ç—Ç—ñ –∂“Ø—Ä–≥—ñ–∑—É—à—ñ!ü§ù\n\n"
                "–°—ñ–∑–¥—ñ“£ –í–£ –Ω”©–º—ñ—Ä—ñ“£—ñ–∑ “õ–∞–∑—ñ—Ä–≥—ñ —É–∞“õ—ã—Ç—Ç–∞ –±—ñ–∑–¥—ñ“£ –±–∞–∑–∞–¥–∞ –∂–æ“õ. –ë“±–ª —Å—ñ–∑ ”ô–ª—ñ 100 —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç—ã –æ—Ä—ã–Ω–¥–∞–º–∞“ì–∞–Ω—ã“£—ã–∑–¥—ã –±—ñ–ª–¥—ñ—Ä–µ–¥—ñ.\n\n"
                "üïã –ë—ñ–∑ –£–ú–†–ê“í–ê –∂–æ–ª–¥–∞–º–∞ “±—Ç—ã—Å –æ–π—ã–Ω—ã–Ω ”©—Ç–∫—ñ–∑–µ–º—ñ–∑!\n"
                "üèÜ “∞—Ç—ã—Å“õ–∞ “õ–∞—Ç—ã—Å—É “Ø—à—ñ–Ω ”ô—Ä–±—ñ—Ä 100 –æ—Ä—ã–Ω–¥–∞–ª“ì–∞–Ω —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç–∞–Ω 1 –∫—É–ø–æ–Ω –±–µ—Ä—ñ–ª–µ–¥—ñ.\n\n"
                "üìÖ –ú—ã–Ω–∞ –∫–µ–∑–µ“£–¥–µ—Ä–¥–µ —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç–∞—Ä–¥—ã –æ—Ä—ã–Ω–¥–∞—É “õ–∞–∂–µ—Ç –±–æ–ª–¥—ã:\n"
                "21.02.2025 - 28.02.2025\n"
                "01.03.2025 - 07.03.2025\n\n"
                "”ò–ª—ñ –¥–µ —É–∞“õ—ã—Ç –±–∞—Ä! –¢–∞–ø—Å—ã—Ä—ã—Å—Ç–∞—Ä—ã“£—ã–∑–¥—ã –æ—Ä—ã–Ω–¥–∞“£—ã–∑ –∂”ô–Ω–µ –±—ñ–∑ —Å—ñ–∑–¥—ñ“£ –∞—Ç—ã“£—ã–∑–¥—ã —Ç—ñ–∑—ñ–º–≥–µ “õ–æ—Å—É–¥—ã –∫“Ø—Ç–µ–º—ñ–∑! üí™\n\n"
                "–ï–≥–µ—Ä —Å“±—Ä–∞“õ—Ç–∞—Ä—ã“£—ã–∑ –±–æ–ª—Å–∞ –Ω–µ–º–µ—Å–µ –∫”©–º–µ–∫ “õ–∞–∂–µ—Ç –±–æ–ª—Å–∞, –±—ñ–∑–≥–µ —Ö–∞–±–∞—Ä–ª–∞—Å—ã“£—ã–∑:\n"
                "üìû +7 777 777 65 00 (WhatsApp)\n\n"
                "“ö“±—Ä–º–µ—Ç–ø–µ–Ω, \"–ê–≤—Ç–æ–ø–∞—Ä—Ç–Ω–µ—Ä\" —Ç–∞–∫—Å–æ–ø–∞—Ä–∫—ñ!")
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [InlineKeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_russian")],
        [InlineKeyboardButton("üá∞üáø “ö–∞–∑–∞“õ—à–∞", callback_data="lang_kazakh")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:", reply_markup=reply_markup)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞
async def set_language(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    chat_id = query.message.chat_id

    if query.data == "lang_russian":
        user_languages[chat_id] = "ru"
        await query.edit_message_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.")
        await context.bot.send_message(
            chat_id=chat_id,
            text="–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –Ω–∏–∂–µ:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–£–∑–Ω–∞—Ç—å –æ –∫—É–ø–æ–Ω–∞—Ö", callback_data="check_coupons")],
                [InlineKeyboardButton("–ù–∞—à WhatsApp", url="https://wa.me/77777776500")],
                [InlineKeyboardButton("–ü–æ–º–æ—â—å", callback_data="help")]
            ])
        )
    elif query.data == "lang_kazakh":
        user_languages[chat_id] = "kz"
        await query.edit_message_text("–°—ñ–∑ “õ–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω —Ç–∞“£–¥–∞–¥—ã“£—ã–∑.")
        await context.bot.send_message(
            chat_id=chat_id,
            text="–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! –û–ø—Ü–∏—è–Ω—ã —Ç–∞“£–¥–∞“£—ã–∑:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ö—É–ø–æ–Ω–¥–∞—Ä–¥—ã –±—ñ–ª—É", callback_data="check_coupons")],
                [InlineKeyboardButton("–ë—ñ–∑–¥—ñ“£ WhatsApp", url="https://wa.me/77777776500")],
                [InlineKeyboardButton("–ö”©–º–µ–∫", callback_data="help")]
            ])
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        chat_id = update.message.chat_id
        user_last_activity[chat_id] = datetime.now()  # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        language = user_languages.get(chat_id, "ru")  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
        user_message = update.message.text.strip()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –í–£ (—Å–æ–¥–µ—Ä–∂–∏—Ç –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã)
        vu_pattern = re.compile(r'^(?=.*[A-Za-z])(?=.*\d).+$')

        if vu_pattern.match(user_message):  # –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ–º–µ—Ä—É –í–£
            user_data = find_data_by_vu(user_message)
            if user_data:
                response = generate_message(user_data, language)
                await update.message.reply_text(response)
            else:
                response = generate_not_found_message(language)
                await update.message.reply_text(response)
        else:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –Ω–æ–º–µ—Ä–æ–º –í–£
            keyboard = [
                [InlineKeyboardButton("–£–∑–Ω–∞—Ç—å –æ –∫—É–ø–æ–Ω–∞—Ö", callback_data="check_coupons")],
                [InlineKeyboardButton("–ù–∞—à WhatsApp", url="https://wa.me/77777776500")],
                [InlineKeyboardButton("–ü–æ–º–æ—â—å", callback_data="help")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await update.message.reply_text(
                "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –í–£ –Ω–æ–º–µ—Ä.",
                reply_markup=reply_markup
            )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_message: {e}")
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        query = update.callback_query
        chat_id = query.message.chat_id
        language = user_languages.get(chat_id, "ru")  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫

        if query.data == "check_coupons":
            await query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –í–£ –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É–ø–æ–Ω–∞—Ö.")
        elif query.data == "help":
            await query.message.reply_text("–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞ WhatsApp: üìû +7 777 777 65 00.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ button_callback: {e}")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async def check_user_activity(context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        current_time = datetime.now()
        for chat_id, last_activity in list(user_last_activity.items()):
            if current_time - last_activity > timedelta(minutes=15):  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω 15 –º–∏–Ω—É—Ç
                keyboard = [[InlineKeyboardButton("–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞", callback_data="restart")]]
                reply_markup = InlineKeyboardMarkup(keyboard)
                try:
                    await context.bot.send_message(
                        chat_id, 
                        "–í—ã –¥–æ–ª–≥–æ –Ω–µ –±—ã–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã. –ù–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞', —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.", 
                        reply_markup=reply_markup
                    )
                    del user_last_activity[chat_id]  # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ª–æ–≤–∞—Ä—è
                except Exception as e:
                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è {chat_id}: {e}")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ check_user_activity: {e}")

# –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞ Excel
class ExcelUpdateHandler(FileSystemEventHandler):
    def on_modified(self, event):
        if event.src_path.endswith("result_with_ids.xlsx"):
            global data
            try:
                data = pd.read_excel("result_with_ids.xlsx")
                logging.info("–§–∞–π–ª result_with_ids.xlsx –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω.")
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

def watch_excel_file():
    observer = Observer()
    event_handler = ExcelUpdateHandler()
    observer.schedule(event_handler, path=".", recursive=False)
    observer.start()
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    try:
        # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ç–æ–∫–µ–Ω–æ–º –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        application = Application.builder().token(BOT_TOKEN).build()

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        application.add_handler(CommandHandler("start", start))
        application.add_handler(CallbackQueryHandler(set_language, pattern="lang_.*"))
        application.add_handler(CallbackQueryHandler(button_callback, pattern="check_coupons|help"))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

        # –ó–∞–ø—É—Å–∫ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è –∑–∞ —Ñ–∞–π–ª–æ–º Excel
        watch_excel_file()
        logging.info("–ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞ Excel –∑–∞–ø—É—â–µ–Ω–æ.")

        # –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if application.job_queue:
            application.job_queue.run_repeating(check_user_activity, interval=60)  # –ó–∞–¥–∞—á–∞ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
            logging.info("–§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞–ø—É—â–µ–Ω–∞.")
        else:
            logging.warning("JobQueue –Ω–µ –±—ã–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –Ω–µ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.")

        # –ó–∞–ø—É—Å–∫ Polling —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫
        while True:
            try:
                logging.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
                application.run_polling()
            except (NetworkError, RetryAfter, TimedOut) as e:
                logging.warning(f"–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Telegram: {e}. –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
                continue
            except Exception as e:
                logging.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
                context = application.bot.create_context()
                asyncio.run(notify_admin(context, f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}"))  # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                break
    except Exception as e:
        logging.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        context = application.bot.create_context()
        asyncio.run(notify_admin(context, f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}"))
        exit(1)

if __name__ == "__main__":
    main()
